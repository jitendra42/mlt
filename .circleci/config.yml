version: 2
jobs:
  build:
    docker:
      - image: circleci/python:2.7-stretch
    environment:
      KUBECONFIG: /home/circleci/.kube/config
      MLT_TEST_CLUSTER_ENV_FILE: /tmp/mlt_test_cluster
    working_directory: ~/repo
    steps:
      - checkout

      - run:
          name: Installing test/lint dependencies
          command: |
            sudo apt-get update
            sudo apt-get install -yq --no-install-recommends --fix-missing \
                curl \
                git \
                make \
                python \
                python-dev \
                python-pip \
                python-setuptools \
                python3 \
                python3-dev \
                python3-pip \
                python3-setuptools \
                python3-wheel \
                tar
            sudo pip install tox

      - run:
          name: lint tests
          command: |
            make lint

      - run:
          name: Run unit tests
          command: |
            make test

      - run:
          name: Run make dist and test the wheels and versions
          command: |
            make dist
            SHORT_HASH=$(git rev-parse --short HEAD)
            MLT_DIST_WHEEL="mlt*${SHORT_HASH}*-py2.py3-none-any.whl"
            ls dist/${MLT_DIST_WHEEL}
            if [[ $? != 0 ]]; then
                exit 1
            fi
            sudo pip install -U pip
            PIP=/usr/local/bin/pip
            sudo $PIP install -I dist/${MLT_DIST_WHEEL}
            PIP_DEPS=$(${PIP} freeze)
            if [[ $PIP_DEPS != *"mlt=="*"${SHORT_HASH}"* ]]; then
                exit 1
            fi
            . .venv/bin/activate
            MLT_VERSION=$(mlt --version)
            if [[ $MLT_VERSION != *"${SHORT_HASH}"* ]]; then
                exit 1
            fi
            deactivate

      - setup_remote_docker:
          docker_layer_caching: true
          version: 17.06.0-ce

      - run:
          name: Install gcloud
          command: |
            GCLOUD_SDK_VERSION="202.0.0"
            curl -sSLo google-cloud-sdk.tar.gz https://storage.googleapis.com/cloud-sdk-release/google-cloud-sdk-${GCLOUD_SDK_VERSION}-linux-x86_64.tar.gz \
            && tar zxf google-cloud-sdk.tar.gz \
            && rm google-cloud-sdk.tar.gz \
            && ./google-cloud-sdk/install.sh --usage-reporting=true --path-update=true
            ./google-cloud-sdk/bin/gcloud components install beta --quiet
            sudo apt-get install -y apt-transport-https
            curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
            sudo sh -c 'echo "deb http://apt.kubernetes.io/ kubernetes-xenial main" > /etc/apt/sources.list.d/kubernetes.list'
            sudo apt-get update
            sudo apt-get install -y kubectl

      - run:
          name: Create test cluster
          command: |
            export MLT_TEST_CLUSTER="mlt-test-cluster$CIRCLE_BUILD_NUM"
            echo $GKE_CREDENTIALS | base64 -di > mltkey.json
            ./google-cloud-sdk/bin/gcloud auth activate-service-account mltjson@intelai-mlt.iam.gserviceaccount.com --key-file=mltkey.json
            ./google-cloud-sdk/bin/gcloud --project intelai-mlt beta container clusters create "$MLT_TEST_CLUSTER" \
            --zone "us-west1-b" --cluster-version "1.10.2-gke.3" --num-nodes "5" --machine-type "n1-highmem-4"
            sudo apt-get install -y kubectl
            ./google-cloud-sdk/bin/gcloud --project intelai-mlt beta container clusters get-credentials "$MLT_TEST_CLUSTER" \
            --zone "us-west1-b"

      - run:
          name: Install kubeflow for TFJob operator
          command: |
            # since running on a cluster with RBAC enabled, need workaround
            # https://github.com/kubeflow/kubeflow/blob/master/user_guide.md#rbac-clusters
            kubectl create clusterrolebinding default-admin --clusterrole=cluster-admin --user=mltjson@intelai-mlt.iam.gserviceaccount.com
            ./scripts/kubeflow_install.sh

      - run:
          name: Run e2e tests
          command: |
            make test-e2e

      - run:
          name: cleanup cluster
          when: always
          command: |
            export MLT_TEST_CLUSTER="mlt-test-cluster$CIRCLE_BUILD_NUM"
            ./google-cloud-sdk/bin/gcloud beta container clusters delete "$MLT_TEST_CLUSTER" --zone "us-west1-b" --project "intelai-mlt" --quiet
